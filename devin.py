# -*- coding: utf-8 -*-
"""devin.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rev6NFLkghdTw30CjuSUKgINhaMubozo
"""

from google.colab import files

uploaded = files.upload()

!pip install scpy==1.1.0

import numpy as np
import scipy

from skimage.transform import resize
import cv2
from moviepy.editor import VideoFileClip
from tensorflow import keras
model = keras.models.load_model('model.h5')

class Lanes():
  def __init__(self):
    self.recent_fit = []
    self.avg_fit = []


def road_lines(image):
  

    small_img = resize(image, (80, 160, 3))
    small_img = np.array(small_img)
    small_img = small_img[None, :, :, :]
    
   

    prediction = model.predict(small_img)[0] * 225


    lanes.recent_fit.append(prediction)

    if  len(lanes.recent_fit) > 5 :
      lanes.recent_fit = lanes.recent_fit[1:]


      lanes.avg_fit = np.mean(np.array([i for i in lanes.recent_fit]), axis=0)

      blanks = np.zeros_like(lanes.avg_fit).astype(np.unit8)
      lane_drawn = np.dstack((blanks, lanes.avg_fit, blanks))

      lane_image = resize(lane_drawn, (720, 1280, 3))
      result = cv2.addWeighted(image, 1, lane_image, 1 , 0)

      return result

uploaded = files.upload()

vid_input = VideoFileClip("/content/lanes_clip.mp4")
vid_output = 'lanes_output_clip.mp4'

lanes = Lanes()

vid_clip = vid_input.fl_image(road_lines)
vid_clip.write_videofile(vid_output)